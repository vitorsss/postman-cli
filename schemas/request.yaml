# yaml-language-server: $schema=http://json-schema.org/draft-04/schema
$schema: "http://json-schema.org/draft-04/schema"
id: "http://schema.postman-cli.com/request/1.0.0/"
title: Request
type: object
properties:
  body:
    $ref: "#/definitions/body"
  description:
    $ref: "#/definitions/description"
  header:
    $ref: "#/definitions/header-list"
  method:
    $ref: "#/definitions/method"
  prerequest:
    $ref: "#/definitions/scripts"
  test:
    $ref: "#/definitions/scripts"
  url:
    $ref: "#/definitions/url"
  $schema:
    type: string
required:
  - url
additionalProperties: false
definitions:
  body:
    id: "#/definitions/body"
    title: Body
    oneOf:
      - type: string
      - type: object
        title: RawJSONBody
        properties:
          json:
            type: string
        required:
          - json
        additionalProperties: false
      - type: object
        title: RawTextBody
        properties:
          text:
            type: string
        required:
          - text
        additionalProperties: false
      - type: object
        title: RawJavaScriptBody
        properties:
          javascript:
            type: string
        required:
          - javascript
        additionalProperties: false
      - type: object
        title: RawHTMLBody
        properties:
          html:
            type: string
        required:
          - html
        additionalProperties: false
      - type: object
        title: RawXMLBody
        properties:
          xml:
            type: string
        required:
          - xml
        additionalProperties: false
      - type: object
        title: URLEncodedBody
        properties:
          urlencoded:
            type: array
            items:
              $ref: "#/definitions/parameter"
        required:
          - urlencoded
        additionalProperties: false
      - type: object
        title: FormDataBody
        properties:
          formdata:
            type: array
            items:
              type: object
              title: FormParameter
              anyOf:
                - type: object
                  title: FormTextParameter
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                    disabled:
                      type: boolean
                      default: false
                      description:
                        When set to true, prevents this form data entity
                        from being sent.
                    type:
                      type: string
                      enum:
                        - text
                    contentType:
                      type: string
                      description:
                        Override Content-Type header of this form data
                        entity.
                    description:
                      $ref: "#/definitions/description"
                  required:
                    - key
                  additionalProperties: false
                - type: object
                  title: FormFileParameter
                  properties:
                    key:
                      type: string
                    src:
                      oneOf:
                        - type: string
                        - type: "null"
                        - type: array
                    disabled:
                      type: boolean
                      default: false
                      description:
                        When set to true, prevents this form data entity
                        from being sent.
                    type:
                      type: string
                      enum:
                        - file
                    contentType:
                      type: string
                      description:
                        Override Content-Type header of this form data
                        entity.
                    description:
                      $ref: "#/definitions/description"
                  required:
                    - key
                  additionalProperties: false
        required:
          - formdata
        additionalProperties: false
      - type: object
        title: FileBody
        properties:
          file:
            type: object
            properties:
              src:
                oneOf:
                  - type: string
                    description:
                      Contains the name of the file to upload. _Not the
                      path_.
                  - type: "null"
                    description:
                      A null src indicates that no file has been selected
                      as a part of the request body
              content:
                type: string
            additionalProperties: false
        required:
          - file
        additionalProperties: false
      - type: object
        title: GraphQLBody
        properties:
          graphql:
            type: object
            properties:
              query:
                type: string
              variables:
                type: string
            required:
              - query
              - variables
            additionalProperties: false
        required:
          - graphql
        additionalProperties: false
  cookie:
    type: object
    title: Cookie
    id: "#/definitions/cookie"
    description: A Cookie, that follows the [Google Chrome format](https://developer.chrome.com/extensions/cookies)
    properties:
      domain:
        type: string
        description: The domain for which this cookie is valid.
      expires:
        oneOf:
        - type: string
        - type: number
        description: When the cookie expires.
      maxAge:
        type: string
      hostOnly:
        type: boolean
        description: True if the cookie is a host-only cookie. (i.e. a request's URL
          domain must exactly match the domain of the cookie).
      httpOnly:
        type: boolean
        description: Indicates if this cookie is HTTP Only. (if True, the cookie is
          inaccessible to client-side scripts)
      name:
        type: string
        description: This is the name of the Cookie.
      path:
        type: string
        description: The path associated with the Cookie.
      secure:
        type: boolean
        description: Indicates if the 'secure' flag is set on the Cookie, meaning
          that it is transmitted over secure connections only. (typically HTTPS)
      session:
        type: boolean
        description: True if the cookie is a session cookie.
      value:
        type: string
        description: The value of the Cookie.
      extensions:
        type: array
        description: Custom attributes for a cookie go here, such as the [Priority
          Field](https://code.google.com/p/chromium/issues/detail?id=232693)
    required:
    - domain
    - path
    additionalProperties: false
  description:
    id: "#/definitions/description"
    title: Description
    description: A Description can be a raw text, or be an object, which holds the description along with its format.
    oneOf:
      - type: string
      - type: object
        title: DescriptionContent
        properties:
          content:
            type: string
            description: The content of the description goes here, as a raw string.
          type:
            type: string
            description: |
              Holds the mime type of the raw description content. E.g: 'text/markdown' or 'text/html'.
              The type is used to correctly render the description when generating documentation, or in the Postman app.
          version:
            type: string
            description: Description can have versions associated with it, which should be put in this property.
        required:
          - content
        additionalProperties: false
  header-list:
    id: "#/definitions/header-list"
    title: Header List
    description: A representation for a list of headers
    type: array
    items:
      $ref: "#/definitions/parameter"
  method:
    id: "#/definitions/method"
    title: Method
    anyOf:
      - description: The Standard HTTP method associated with this request.
        title: HTTPMethod
        type: string
        enum:
          - GET
          - PUT
          - POST
          - PATCH
          - DELETE
          - COPY
          - HEAD
          - OPTIONS
          - LINK
          - UNLINK
          - PURGE
          - LOCK
          - UNLOCK
          - PROPFIND
          - VIEW
      - description: The Custom HTTP method associated with this request.
        type: string
  parameter:
    id: "#/definitions/parameter"
    title: Parameter
    properties:
      key:
        type: string
      value:
        type: string
      disabled:
        type: boolean
        default: false
        description: If set to true, the current parameter will not be sent with requests.
      description:
        $ref: "#/definitions/description"
    required:
      - key
    additionalProperties: false
  scripts:
    id: "#/definitions/script"
    title: Scripts
    type: array
    items:
      $ref: "#/definitions/script"
  script:
    id: "#/definitions/script"
    title: Script
    description: A script is a snippet of Javascript code that can be used to to perform
      setup or teardown operations on a particular response.
    oneOf:
      - type: string
      - title: ScriptSrc
        type: object
        properties:
          src:
            type: string
        required:
          - src
        additionalProperties: false
  url:
    description:
      If object, contains the complete broken-down URL for this request.
      If string, contains the literal request URL.
    id: "#/definitions/url"
    title: URLBase
    oneOf:
      - type: object
        title: URL
        properties:
          base:
            type: string
            description:
              The string representation of the request URL, including the
              protocol, host, path, hash and path variable(s).
          query:
            type: array
            description:
              An array of QueryParams, which is basically the query string
              part of the URL, parsed into separate variables
            items:
              $ref: "#/definitions/parameter"
          variable:
            type: array
            description:
              Postman supports path variables with the syntax `/path/:variableName/to/somewhere`.
              These variables are stored in this field.
            items:
              $ref: "#/definitions/parameter"
        required:
          - base
        additionalProperties: false
      - type: string
